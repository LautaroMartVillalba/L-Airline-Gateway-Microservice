spring.application.name=microservice-gateway
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
server.port=8080
spring.cloud.loadbalancer.ribbon.enabled=false

#Hotel microservice configuration
#   only for admins
spring.cloud.gateway.routes[0].id=hotel-microservice
spring.cloud.gateway.routes[0].uri=lb://MICROSERVICE-HOTEL
spring.cloud.gateway.routes[0].predicates[0]=Path=/hotel/insert, /hotel/delete, /hotel/update
spring.cloud.gateway.routes[0].filters[0]=AdminFilter
#   open to admins and users
spring.cloud.gateway.routes[1].id=hotel-microservice
spring.cloud.gateway.routes[1].uri=lb://MICROSERVICE-HOTEL
spring.cloud.gateway.routes[1].predicates[0]=Path=/hotel/byId, /hotel/byName, /hotel/byCity, /hotel/byRoom, /hotel/byPrice
spring.cloud.gateway.routes[1].filters[0]=UserAndAdminFilter

#Flight microservice configuration
#   only for admins
spring.cloud.gateway.routes[5].id=flight-microservice
spring.cloud.gateway.routes[5].uri=lb://MICROSERVICE-FLIGHT
spring.cloud.gateway.routes[5].predicates[0]=Path=/flight/insert, /flight/delete, /flight/update
spring.cloud.gateway.routes[5].filters[0]=AdminFilter
#   open to admins and users
spring.cloud.gateway.routes[6].id=flight-microservice
spring.cloud.gateway.routes[6].uri=lb://MICROSERVICE-FLIGHT
spring.cloud.gateway.routes[6].predicates[0]=Path=/flight/byId, /flight/byAirline, /flight/, /flight/byDestiny, /flight/bySchedule, /flight/byPrice
spring.cloud.gateway.routes[6].filters[0]=UserAndAdminFilter

#User microservice configuration
#   only for admins
spring.cloud.gateway.routes[2].id=microservice-user-jwt
spring.cloud.gateway.routes[2].uri=lb://MICROSERVICE-USER-JWT
spring.cloud.gateway.routes[2].predicates[0]=Path=/user/byId, /user/byEmail, /user/byName, /user/delete
spring.cloud.gateway.routes[2].filters[0]=AdminFilter
#   open to admins and users
spring.cloud.gateway.routes[3].id=microservice-user-jwt
spring.cloud.gateway.routes[3].uri=lb://MICROSERVICE-USER-JWT
spring.cloud.gateway.routes[3].predicates[0]=Path=/user/insert, /user/updateInfo
spring.cloud.gateway.routes[3].filters[0]=UserAndAdminFilter
#   open to admins and users
spring.cloud.gateway.routes[4].id=microservice-user-jwt
spring.cloud.gateway.routes[4].uri=lb://MICROSERVICE-USER-JWT
spring.cloud.gateway.routes[4].predicates[0]=Path=/auth/**
spring.cloud.gateway.routes[4].filters[0]=UserAndAdminFilter

jwt.secret=78495615616518687135413545146136513521361535135356135